<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ios | Alpine Blog]]></title>
  <link href="http://githubdelegate.github.io/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://githubdelegate.github.io/"/>
  <updated>2015-12-17T16:02:38+08:00</updated>
  <id>http://githubdelegate.github.io/</id>
  <author>
    <name><![CDATA[zy]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[在.mm文件中调用一个C函数]]></title>
    <link href="http://githubdelegate.github.io/blog/2015/11/06/crcjian-yan-fang-zai-viewcontroller/"/>
    <updated>2015-11-06T14:25:59+08:00</updated>
    <id>http://githubdelegate.github.io/blog/2015/11/06/crcjian-yan-fang-zai-viewcontroller</id>
    <content type="html"><![CDATA[<p>在项目中使用crc进行校验，在网上找到一份c的源码，但是放到项目当中一直编译失败，提示找不到对应的函数
一开始是认为是传递的参数不对，发现不是这个问题,<code>viewController.mm</code>中是用OC++编译的，导致编译不过，但是不明白原因，现在的解决办法是把这c函数放到<code>.m</code>的文件中编译就可以了。</p>

<hr />

<p>原因分析：原因是由于<code>ViewController.mm</code>是<code>.mm</code>后缀的，会按照OC++编译,所以在<code>ViewController.mm</code> 调用<code>int add(int a,int b)</code>函数，在链接阶段,就会去目标文件中去找<code>_add_int_int</code>这样的符号,不同的编译器可能会不同，但是C函数编译后生成的符号是<code>_int</code>，这就导致找不到对应的函数，编译失败,解决办法在C头文件中添加<code>extern "C"</code>，即可。详细解释，开下面的连接博客。</p>

<blockquote><p><a href="http://www.cnblogs.com/skynet/archive/2010/07/10/1774964.html">http://www.cnblogs.com/skynet/archive/2010/07/10/1774964.html</a>
<a href="http://www.jianshu.com/p/5d2eeeb93590">http://www.jianshu.com/p/5d2eeeb93590</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS8 framework动态库遇到的问题]]></title>
    <link href="http://githubdelegate.github.io/blog/2015/09/08/ios8chuang-jian-frameworkyu-dao-de-wen-ti/"/>
    <updated>2015-09-08T14:32:29+08:00</updated>
    <id>http://githubdelegate.github.io/blog/2015/09/08/ios8chuang-jian-frameworkyu-dao-de-wen-ti</id>
    <content type="html"><![CDATA[<ol>
<li><p>编译显示<code>Include of non-modular header inside framework module</code> 错误</p>

<p>  修改<code>Build Setting</code> 中<code>Allow Non-modular Include InFramework Modules</code> 为YES.</p></li>
<li><p>在代码中引用头文件 <code>#import "***Kit.h"</code> 提示找不到</p>

<p> 这个时候要检查对应的framework target <code>Build Phases-&gt;Headers-&gt;Public</code> 是否包含对应的类。一般要提供给其他target使用的类的.h文件都应该放到Public中.</p></li>
</ol>

]]></content>
  </entry>
  
</feed>
